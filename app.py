import os
from flask import Flask, request, jsonify
from dotenv import load_dotenv
import openai
import google.generativeai as genai

# ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ
load_dotenv()

OPENAI_API_KEY = os.environ.get("OPENAI_API_KEY")
GENAI_API_KEY = os.environ.get("GENAI_API_KEY")
PORT = int(os.environ.get("PORT", 5000))

if not OPENAI_API_KEY or not GENAI_API_KEY:
    raise ValueError("ูุฌุจ ุชุนููู ุฌููุน ุงููุชุบูุฑุงุช ุงูุจูุฆูุฉ ูู ููู .env ุฃู Render")

openai.api_key = OPENAI_API_KEY
genai.configure(api_key=GENAI_API_KEY)

app = Flask(__name__)

# ุฃูุฑ ูุณุงุนุฏุฉ
HELP_TEXT = """
ุฃูุงูุฑ ุงูุจูุช ุงููุชุงุญุฉ:

1. ูุณุงุนุฏุฉ โ ุนุฑุถ ูุฐุง ุงูุฏููู.
2. ุชุนูู ุงูุฅูุฌููุฒูุฉ โ ุชุนููู ุจุทุฑููุฉ ูุนุจุฉ.
3. ูุถูุถุฉ ุงููุดุงุนุฑ โ ุนุจุฑ ุนู ูุดุงุนุฑู ูุงุญุตู ุนูู ุญููู.
4. ุงูุดุงุก ุตูุฑุฉ โ ุฃูุดุฆ ุตูุฑุฉ ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู.
5. ุงูุดุงุก ููุฏูู โ ุฃูุดุฆ ููุฏูู ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู.
6. ุงูุดุงุก ุนุฑุถ ุชูุฏููู โ ุฃูุดุฆ ุดุฑุงุฆุญ ุนุฑุถ ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู.
7. ูุชุงุจุฉ ููุฏ โ ุฅูุดุงุก ููุฏ ุฃู ุชุตุญูุญู.
8. ุฅูุดุงุก ุฃูุงูุฑ โ ูุชุงุจุฉ ุฃู ุชูููุฏ ุฃู ุฃูุฑ ุงุญุชุฑุงูู ูุงุณุชุฎุฏุงูู ูู ููุงูุน ุงูุฐูุงุก ุงูุงุตุทูุงุนู.
"""

@app.route("/", methods=["GET"])
def index():
    return "ุจูุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุฌุงูุฒ ููุนูู!"

@app.route("/chat", methods=["POST"])
def chat():
    data = request.json
    user_input = data.get("message", "").lower()

    if not user_input:
        return jsonify({"response": "ุงูุชุจ ุฑุณุงูุฉ ุฃููุงู."})

    # ุฃูุฑ ูุณุงุนุฏุฉ
    if "ูุณุงุนุฏุฉ" in user_input:
        return jsonify({"response": HELP_TEXT})

    # ุชุนููู ุงูุฅูุฌููุฒูุฉ ุจุทุฑููุฉ ูุนุจุฉ
    if "ุชุนูู ุงูุฅูุฌููุฒูุฉ" in user_input:
        return jsonify({"response": "ููุง ููุนุจ ููุชุนูู ุงูุฅูุฌููุฒูุฉ! ๐ฎ ุงูุชุจ ุฌููุฉ ูุณุฃุตูุน ูููุง ุชูุฑูู ููุชุน ูู."})

    # ูุถูุถุฉ ุงููุดุงุนุฑ
    if "ูุถูุถุฉ" in user_input or "ูุดุงุนุฑ" in user_input:
        return jsonify({"response": "ุฃุฎุจุฑูู ุจูุง ุชุดุนุฑุ ูุณุฃุณุงุนุฏู ุจุญููู ูุฏูุฉ ูููุงุณุจุฉ."})

    # ุฅูุดุงุก ุตูุฑุฉ
    if "ุตูุฑุฉ" in user_input:
        prompt = user_input.replace("ุตูุฑุฉ", "").strip()
        # ููุง ุงุณุชุฏุนุงุก Google GenAI ุฃู OpenAI ูุฅูุดุงุก ุงูุตูุฑุฉ
        return jsonify({"response": f"ุชู ุฅูุดุงุก ุตูุฑุฉ ุจูุงุกู ุนูู: {prompt}"})

    # ุฅูุดุงุก ููุฏูู
    if "ููุฏูู" in user_input:
        prompt = user_input.replace("ููุฏูู", "").strip()
        return jsonify({"response": f"ุชู ุฅูุดุงุก ููุฏูู ุจูุงุกู ุนูู: {prompt}"})

    # ุฅูุดุงุก ุนุฑุถ ุชูุฏููู
    if "ุนุฑุถ" in user_input or "ุชูุฏููู" in user_input:
        prompt = user_input.replace("ุนุฑุถ", "").replace("ุชูุฏููู", "").strip()
        return jsonify({"response": f"ุชู ุฅูุดุงุก ุดุฑุงุฆุญ ุนุฑุถ ุชูุฏููู ุจูุงุกู ุนูู: {prompt}"})

    # ุฅูุดุงุก ููุฏ ุฃู ุชุตุญูุญู
    if "ููุฏ" in user_input or "ุชุตุญูุญ" in user_input:
        return jsonify({"response": "ุฃุฑุณู ูู ุงูููุฏ ูุณุฃููู ุจูุชุงุจุชู ุฃู ุชุตุญูุญู ูู."})

    # ุฅูุดุงุก ุฃูุงูุฑ ุงุญุชุฑุงููุฉ
    if "ุฃูุฑ" in user_input or "ุฅูุดุงุก" in user_input:
        return jsonify({"response": "ุฃุฑุณู ูู ุงูููุฑุฉ ูุณุฃูุชุจ ูู ุฃูุฑ ุงุญุชุฑุงูู ุฌุงูุฒ ููุงุณุชุฎุฏุงู."})

    # ุงูุฑุฏ ุงูุงูุชุฑุงุถู
    return jsonify({"response": "ูู ุฃููู ุทูุจูุ ุงูุชุจ 'ูุณุงุนุฏุฉ' ูุฑุคูุฉ ุงูุฃูุงูุฑ."})

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=PORT)
